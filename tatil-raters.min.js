window.TATILRaters ={version:'2.0',initialized:false,currentRater:null,connectionSpeed:'unknown',performanceMetrics:{},raterTypes:{motor:{name:'Motor Vehicle Insurance',description:'Calculate premiums for cars,trucks,and motorcycles',icon:'🚗',loaded:false,required:true},property:{name:'Property Insurance',description:'Home,building,and contents insurance calculations',icon:'🏠',loaded:false,required:false},marine:{name:'Marine Insurance',description:'Boat and marine vessel insurance ratings',icon:'⛵',loaded:false,required:false},liability:{name:'Liability Insurance',description:'General and professional liability coverage',icon:'⚖️',loaded:false,required:false}},zones:{trinidad:{'Port of Spain':{zone:1,riskFactor:1.25},'San Fernando':{zone:2,riskFactor:1.15},'Chaguanas':{zone:2,riskFactor:1.10},'Arima':{zone:3,riskFactor:1.05},'Point Fortin':{zone:4,riskFactor:1.00},'Other Trinidad':{zone:4,riskFactor:1.00}},tobago:{'Scarborough':{zone:3,riskFactor:1.05},'Crown Point':{zone:4,riskFactor:1.00},'Roxborough':{zone:4,riskFactor:1.00},'Other Tobago':{zone:4,riskFactor:1.00}}},baseRates:{motor:{comprehensive:{base:4.5,minimum:1200},thirdParty:{base:2.8,minimum:600},fireTheft:{base:3.2,minimum:800}},property:{dwelling:{base:0.8,minimum:500},contents:{base:1.2,minimum:300},both:{base:1.0,minimum:750}}}};window.initTATILRaters = function(){console.log('Initializing TATIL Raters v' + TATILRaters.version);TATILRaters.performanceMetrics.startTime = performance.now();TATILRaters.initializeUI();TATILRaters.loadRaterModules();TATILRaters.setupEventListeners();TATILRaters.initialized = true;TATILRaters.performanceMetrics.initTime = performance.now()- TATILRaters.performanceMetrics.startTime;console.log(`TATIL Raters initialized in ${TATILRaters.performanceMetrics.initTime.toFixed(2)}ms`);if(typeof TATILAnalytics !== 'undefined'){TATILAnalytics.track('app_initialized',{version:TATILRaters.version,initTime:TATILRaters.performanceMetrics.initTime,connectionType:window.tatilResourceLoader ? window.tatilResourceLoader.effectiveType:'unknown'})}};TATILRaters.initializeUI = function(){const raterGrid = document.getElementById('raterGrid');if(!raterGrid)return;raterGrid.innerHTML = '';Object.keys(TATILRaters.raterTypes).forEach(raterType =>{const rater = TATILRaters.raterTypes[raterType];const card = TATILRaters.createRaterCard(raterType,rater);raterGrid.appendChild(card)});raterGrid.className = 'rater-grid';if(!document.getElementById('dynamicStyles')){TATILRaters.addDynamicStyles()}};TATILRaters.createRaterCard = function(type,rater){const card = document.createElement('div');card.className = 'rater-card';card.id = `rater-${type}`;card.innerHTML = ` <div class="rater-icon">${rater.icon}</div> <h3 class="rater-title">${rater.name}</h3> <p class="rater-description">${rater.description}</p> <div class="rater-status"> <span class="status-indicator" id="status-${type}">Loading...</span> </div> <button class="rater-button" id="btn-${type}" onclick="TATILRaters.openRater('${type}')" disabled> Calculate </button> `;return card};TATILRaters.loadRaterModules = function(){const connectionSpeed = window.tatilResourceLoader ? window.tatilResourceLoader.effectiveType:'4g';TATILRaters.connectionSpeed = connectionSpeed;TATILRaters.loadMotorRater();if(connectionSpeed === '4g' || connectionSpeed === '5g'){setTimeout(()=> TATILRaters.loadPropertyRater(),100);setTimeout(()=> TATILRaters.loadMarineRater(),200);setTimeout(()=> TATILRaters.loadLiabilityRater(),300)}else if(connectionSpeed === '3g'){setTimeout(()=> TATILRaters.loadPropertyRater(),500)}};TATILRaters.loadMotorRater = function(){const statusElement = document.getElementById('status-motor');if(statusElement)statusElement.textContent = 'Loading...';window.MotorRater ={calculate:function(vehicleValue,coverageType,zone,ageGroup,claims){const baseRate = TATILRaters.baseRates.motor[coverageType];if(!baseRate)return null;let premium = vehicleValue *(baseRate.base / 100);if(zone && TATILRaters.zones.trinidad[zone]){premium *= TATILRaters.zones.trinidad[zone].riskFactor}else if(zone && TATILRaters.zones.tobago[zone]){premium *= TATILRaters.zones.tobago[zone].riskFactor}const ageFactors ={'under-25':1.5,'25-35':1.2,'36-50':1.0,'over-50':0.9};if(ageFactors[ageGroup]){premium *= ageFactors[ageGroup]}const claimsFactors ={'0':0.9,'1':1.0,'2':1.3,'3+':1.6};if(claimsFactors[claims]){premium *= claimsFactors[claims]}premium = Math.max(premium,baseRate.minimum);return Math.round(premium)}};TATILRaters.raterTypes.motor.loaded = true;if(statusElement)statusElement.textContent = 'Ready';const button = document.getElementById('btn-motor');if(button)button.disabled = false;console.log('Motor rater loaded successfully')};TATILRaters.loadPropertyRater = function(){const statusElement = document.getElementById('status-property');if(statusElement)statusElement.textContent = 'Loading...';window.PropertyRater ={calculate:function(propertyValue,contentValue,zone,propertyType,construction){let dwellingPremium = 0;let contentsPremium = 0;if(propertyValue > 0){const dwellingRate = TATILRaters.baseRates.property.dwelling;dwellingPremium = propertyValue *(dwellingRate.base / 100);dwellingPremium = Math.max(dwellingPremium,dwellingRate.minimum)}if(contentValue > 0){const contentsRate = TATILRaters.baseRates.property.contents;contentsPremium = contentValue *(contentsRate.base / 100);contentsPremium = Math.max(contentsPremium,contentsRate.minimum)}let totalPremium = dwellingPremium + contentsPremium;if(zone && TATILRaters.zones.trinidad[zone]){totalPremium *= TATILRaters.zones.trinidad[zone].riskFactor}else if(zone && TATILRaters.zones.tobago[zone]){totalPremium *= TATILRaters.zones.tobago[zone].riskFactor}const constructionFactors ={'concrete':0.9,'wood':1.1,'mixed':1.0};if(constructionFactors[construction]){totalPremium *= constructionFactors[construction]}return{dwelling:Math.round(dwellingPremium),contents:Math.round(contentsPremium),total:Math.round(totalPremium)}}};TATILRaters.raterTypes.property.loaded = true;if(statusElement)statusElement.textContent = 'Ready';const button = document.getElementById('btn-property');if(button)button.disabled = false;console.log('Property rater loaded successfully')};TATILRaters.loadMarineRater = function(){const statusElement = document.getElementById('status-marine');if(statusElement)statusElement.textContent = 'Loading...';window.MarineRater ={calculate:function(vesselValue,vesselType,usage,experience){const baseRate = vesselType === 'yacht' ? 2.5:vesselType === 'speedboat' ? 3.0:2.0;let premium = vesselValue *(baseRate / 100);const usageFactors ={'recreational':1.0,'commercial':1.3,'charter':1.5};if(usageFactors[usage]){premium *= usageFactors[usage]}const expFactors ={'novice':1.3,'intermediate':1.0,'expert':0.9};if(expFactors[experience]){premium *= expFactors[experience]}return Math.round(Math.max(premium,800))}};TATILRaters.raterTypes.marine.loaded = true;if(statusElement)statusElement.textContent = 'Ready';const button = document.getElementById('btn-marine');if(button)button.disabled = false;console.log('Marine rater loaded successfully')};TATILRaters.loadLiabilityRater = function(){const statusElement = document.getElementById('status-liability');if(statusElement)statusElement.textContent = 'Loading...';window.LiabilityRater ={calculate:function(coverageLimit,businessType,employees,revenue){const basePremium = coverageLimit / 1000;const businessFactors ={'office':0.8,'retail':1.0,'manufacturing':1.5,'professional':1.2,'hospitality':1.8};let premium = basePremium;if(businessFactors[businessType]){premium *= businessFactors[businessType]}premium +=(employees * 50);if(revenue > 1000000){premium *= 1.2}return Math.round(Math.max(premium,1000))}};TATILRaters.raterTypes.liability.loaded = true;if(statusElement)statusElement.textContent = 'Ready';const button = document.getElementById('btn-liability');if(button)button.disabled = false;console.log('Liability rater loaded successfully')};TATILRaters.openRater = function(raterType){if(!TATILRaters.raterTypes[raterType] || !TATILRaters.raterTypes[raterType].loaded){alert('This rater is not available yet. Please wait for it to load or check your connection.');return}TATILRaters.currentRater = raterType;TATILRaters.showRaterModal(raterType);if(typeof TATILAnalytics !== 'undefined'){TATILAnalytics.track('rater_opened',{type:raterType})}};TATILRaters.showRaterModal = function(raterType){const existingModal = document.getElementById('raterModal');if(existingModal){existingModal.remove()}const modal = document.createElement('div');modal.id = 'raterModal';modal.className = 'rater-modal';const modalContent = TATILRaters.generateRaterForm(raterType);modal.innerHTML = modalContent;document.body.appendChild(modal);TATILRaters.setupModalEvents(raterType);setTimeout(()=>{modal.classList.add('show')},10)};TATILRaters.generateRaterForm = function(raterType){const rater = TATILRaters.raterTypes[raterType];let formContent = '';if(raterType === 'motor'){formContent = ` <div class="form-group"> <label for="vehicleValue">Vehicle Value(TTD)</label> <input type="number" id="vehicleValue" min="1000" max="2000000" placeholder="e.g.,150000"> </div> <div class="form-group"> <label for="coverageType">Coverage Type</label> <select id="coverageType"> <option value="comprehensive">Comprehensive</option> <option value="thirdParty">Third Party</option> <option value="fireTheft">Fire & Theft</option> </select> </div> <div class="form-group"> <label for="location">Location</label> <select id="location"> <optgroup label="Trinidad"> <option value="Port of Spain">Port of Spain</option> <option value="San Fernando">San Fernando</option> <option value="Chaguanas">Chaguanas</option> <option value="Arima">Arima</option> <option value="Point Fortin">Point Fortin</option> <option value="Other Trinidad">Other Trinidad</option> </optgroup> <optgroup label="Tobago"> <option value="Scarborough">Scarborough</option> <option value="Crown Point">Crown Point</option> <option value="Roxborough">Roxborough</option> <option value="Other Tobago">Other Tobago</option> </optgroup> </select> </div> <div class="form-group"> <label for="ageGroup">Driver Age Group</label> <select id="ageGroup"> <option value="under-25">Under 25</option> <option value="25-35">25-35</option> <option value="36-50">36-50</option> <option value="over-50">Over 50</option> </select> </div> <div class="form-group"> <label for="claims">Claims in Last 3 Years</label> <select id="claims"> <option value="0">None</option> <option value="1">1 Claim</option> <option value="2">2 Claims</option> <option value="3+">3 or More</option> </select> </div> `}else if(raterType === 'property'){formContent = ` <div class="form-group"> <label for="propertyValue">Property Value(TTD)</label> <input type="number" id="propertyValue" min="0" max="10000000" placeholder="e.g.,800000"> </div> <div class="form-group"> <label for="contentValue">Contents Value(TTD)</label> <input type="number" id="contentValue" min="0" max="1000000" placeholder="e.g.,100000"> </div> <div class="form-group"> <label for="location">Location</label> <select id="location"> <optgroup label="Trinidad"> <option value="Port of Spain">Port of Spain</option> <option value="San Fernando">San Fernando</option> <option value="Chaguanas">Chaguanas</option> <option value="Arima">Arima</option> <option value="Point Fortin">Point Fortin</option> <option value="Other Trinidad">Other Trinidad</option> </optgroup> <optgroup label="Tobago"> <option value="Scarborough">Scarborough</option> <option value="Crown Point">Crown Point</option> <option value="Roxborough">Roxborough</option> <option value="Other Tobago">Other Tobago</option> </optgroup> </select> </div> <div class="form-group"> <label for="construction">Construction Type</label> <select id="construction"> <option value="concrete">Concrete/Block</option> <option value="wood">Wood</option> <option value="mixed">Mixed Construction</option> </select> </div> `}return ` <div class="modal-backdrop" onclick="TATILRaters.closeModal()"></div> <div class="modal-container"> <div class="modal-header"> <h2>${rater.icon}${rater.name}</h2> <button class="close-button" onclick="TATILRaters.closeModal()">×</button> </div> <div class="modal-body"> <form id="raterForm" onsubmit="TATILRaters.calculateRate(event,'${raterType}')"> ${formContent}<div class="form-actions"> <button type="button" onclick="TATILRaters.closeModal()">Cancel</button> <button type="submit">Calculate Premium</button> </div> </form> <div id="raterResults" class="results-container" style="display:none;"> <!-- Results will be displayed here --> </div> </div> </div> `};TATILRaters.setupModalEvents = function(raterType){document.addEventListener('keydown',function(e){if(e.key === 'Escape'){TATILRaters.closeModal()}});const inputs = document.querySelectorAll('#raterModal input[type="number"]');inputs.forEach(input =>{input.addEventListener('input',function(){TATILRaters.validateInput(this)})})};TATILRaters.validateInput = function(input){const value = parseFloat(input.value);const min = parseFloat(input.min);const max = parseFloat(input.max);if(value < min || value > max){input.style.borderColor = '#dc2626'}else{input.style.borderColor = '#d1d5db'}};TATILRaters.calculateRate = function(event,raterType){event.preventDefault();const form = event.target;const formData = new FormData(form);let result = null;try{if(raterType === 'motor'){const vehicleValue = parseInt(document.getElementById('vehicleValue').value);const coverageType = document.getElementById('coverageType').value;const location = document.getElementById('location').value;const ageGroup = document.getElementById('ageGroup').value;const claims = document.getElementById('claims').value;result = MotorRater.calculate(vehicleValue,coverageType,location,ageGroup,claims)}else if(raterType === 'property'){const propertyValue = parseInt(document.getElementById('propertyValue').value)|| 0;const contentValue = parseInt(document.getElementById('contentValue').value)|| 0;const location = document.getElementById('location').value;const construction = document.getElementById('construction').value;result = PropertyRater.calculate(propertyValue,contentValue,location,'residential',construction)}if(result){TATILRaters.displayResults(result,raterType)}else{throw new Error('Calculation failed')}}catch(error){console.error('Calculation error:',error);alert('Error calculating premium. Please check your inputs and try again.')}};TATILRaters.displayResults = function(result,raterType){const resultsContainer = document.getElementById('raterResults');let resultHTML = '';if(raterType === 'motor'){resultHTML = ` <h3>Premium Calculation</h3> <div class="result-item"> <span class="label">Annual Premium:</span> <span class="value">TTD $${result.toLocaleString()}</span> </div> <div class="result-item"> <span class="label">Monthly Payment:</span> <span class="value">TTD $${Math.round(result / 12).toLocaleString()}</span> </div> `}else if(raterType === 'property'){resultHTML = ` <h3>Premium Breakdown</h3> ${result.dwelling > 0 ? ` <div class="result-item"> <span class="label">Dwelling Premium:</span> <span class="value">TTD $${result.dwelling.toLocaleString()}</span> </div>`:''}${result.contents > 0 ? ` <div class="result-item"> <span class="label">Contents Premium:</span> <span class="value">TTD $${result.contents.toLocaleString()}</span> </div>`:''}<div class="result-item total"> <span class="label">Total Annual Premium:</span> <span class="value">TTD $${result.total.toLocaleString()}</span> </div> `}resultHTML += ` <div class="result-actions"> <button onclick="TATILRaters.emailQuote()">Email Quote</button> <button onclick="TATILRaters.printQuote()">Print Quote</button> </div> <p class="disclaimer"> <small>*This is an estimated premium. Final rates may vary based on underwriting and policy terms.</small> </p> `;resultsContainer.innerHTML = resultHTML;resultsContainer.style.display = 'block';document.getElementById('raterForm').style.display = 'none';resultsContainer.scrollIntoView({behavior:'smooth'})};TATILRaters.closeModal = function(){const modal = document.getElementById('raterModal');if(modal){modal.classList.remove('show');setTimeout(()=>{modal.remove()},300)}};TATILRaters.emailQuote = function(){const subject = 'TATIL Insurance Quote';const body = 'Please find your insurance quote details attached.';window.location.href = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`};TATILRaters.printQuote = function(){window.print()};TATILRaters.setupEventListeners = function(){if('connection' in navigator){navigator.connection.addEventListener('change',function(){const connectionElement = document.getElementById('connectionIndicator');if(connectionElement){console.log('Connection changed:',navigator.connection.effectiveType)}})}window.addEventListener('online',function(){console.log('Application is online');document.getElementById('offlineIndicator').style.display = 'none'});window.addEventListener('offline',function(){console.log('Application is offline');document.getElementById('offlineIndicator').style.display = 'block'})};TATILRaters.addDynamicStyles = function(){const style = document.createElement('style');style.id = 'dynamicStyles';style.textContent = ` .rater-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(300px,1fr));gap:20px;margin-top:20px}.rater-card{background:white;border-radius:12px;padding:24px;box-shadow:0 4px 6px rgba(0,0,0,0.1);transition:transform 0.2s,box-shadow 0.2s;text-align:center}.rater-card:hover{transform:translateY(-4px);box-shadow:0 8px 25px rgba(0,0,0,0.15)}.rater-icon{font-size:3rem;margin-bottom:16px}.rater-title{font-size:1.25rem;font-weight:600;margin-bottom:8px;color:#1f2937}.rater-description{color:#6b7280;margin-bottom:16px;line-height:1.5}.rater-status{margin-bottom:16px}.status-indicator{display:inline-block;padding:4px 8px;border-radius:12px;font-size:0.75rem;font-weight:500;background:#f3f4f6;color:#6b7280}.rater-button{background:#2563eb;color:white;border:none;padding:12px 24px;border-radius:6px;font-weight:500;cursor:pointer;transition:background-color 0.2s;width:100%}.rater-button:hover:not(:disabled){background:#1d4ed8}.rater-button:disabled{background:#9ca3af;cursor:not-allowed}.rater-modal{position:fixed;top:0;left:0;width:100%;height:100%;z-index:10000;opacity:0;visibility:hidden;transition:opacity 0.3s,visibility 0.3s}.rater-modal.show{opacity:1;visibility:visible}.modal-backdrop{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.5)}.modal-container{position:relative;max-width:600px;margin:50px auto;background:white;border-radius:12px;max-height:calc(100vh - 100px);overflow-y:auto}.modal-header{padding:24px;border-bottom:1px solid #e5e7eb;display:flex;justify-content:space-between;align-items:center}.modal-header h2{margin:0;font-size:1.5rem;color:#1f2937}.close-button{background:none;border:none;font-size:1.5rem;cursor:pointer;color:#6b7280;padding:0;width:32px;height:32px;display:flex;align-items:center;justify-content:center}.modal-body{padding:24px}.form-group{margin-bottom:20px}.form-group label{display:block;margin-bottom:8px;font-weight:500;color:#374151}.form-group input,.form-group select{width:100%;padding:12px;border:1px solid #d1d5db;border-radius:6px;font-size:16px}.form-actions{display:flex;gap:12px;margin-top:24px}.form-actions button{flex:1;padding:12px;border:none;border-radius:6px;font-weight:500;cursor:pointer}.form-actions button[type="submit"]{background:#2563eb;color:white}.form-actions button[type="button"]{background:#f3f4f6;color:#374151}.results-container{margin-top:24px;padding:20px;background:#f9fafb;border-radius:8px}.result-item{display:flex;justify-content:space-between;padding:8px 0;border-bottom:1px solid #e5e7eb}.result-item.total{font-weight:600;font-size:1.1rem;border-bottom:2px solid #2563eb;color:#2563eb}.result-actions{display:flex;gap:12px;margin:20px 0}.result-actions button{flex:1;padding:10px;background:#2563eb;color:white;border:none;border-radius:6px;cursor:pointer}.disclaimer{font-style:italic;color:#6b7280;margin-top:16px}@media(max-width:768px){.rater-grid{grid-template-columns:1fr;gap:16px}.modal-container{margin:20px;max-height:calc(100vh - 40px)}.modal-header,.modal-body{padding:16px}}`;document.head.appendChild(style)};